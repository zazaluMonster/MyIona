{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/wangeditor/release/wangEditor.js","webpack:///./node_modules/cssfilter/lib/index.js","webpack:///./node_modules/xss/lib/xss.js","webpack:///./node_modules/os-browserify/browser.js","webpack:///./node_modules/xss/lib/parser.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/xss/lib/index.js","webpack:///./src/components/message/rich-text.vue?8ac5","webpack:///./node_modules/cssfilter/lib/default.js","webpack:///./node_modules/cssfilter/lib/util.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/cssfilter/lib/parser.js","webpack:///./node_modules/cssfilter/lib/css.js","webpack:///./node_modules/xss/lib/default.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./src/components/message/rich-text.vue?fbc6","webpack:///./src/components/message/rich-text.vue?631f","webpack:///./src/components/message/rich-text.vue","webpack:///./node_modules/xss/lib/util.js","webpack:///src/components/message/rich-text.vue","webpack:///./node_modules/core-js/modules/_string-ws.js"],"names":["pIE","__webpack_require__","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","Object","getOwnPropertyDescriptor","exports","f","O","P","e","call","global","factory","module","this","polyfill","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","document","ownerDocument","querySelectorAll","i","item","createElemByHTML","html","div","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","result","eventList","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","$","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","get","first","last","on","type","types","split","addEventListener","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","reg","test","isIE","window","objForEach","obj","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","name","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","pasteText","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","getPasteImgs","txt","items","getAsFile","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","pasteTime","canDo","now","Date","flag","resetTime","ex","pasteFiles","img","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","inlinecss","getElementsByTagName","wangEditor","DEFAULT","FilterCSS","filterCSS","options","xss","process","parser","parseTag","parseAttr","_","isNull","undefined","getAttrs","spaceIndex","closing","isClosing","shallowCopyObject","ret","FilterXSS","stripIgnoreTag","onIgnoreTag","console","onIgnoreTagStripAll","whiteList","onTag","onTagAttr","onIgnoreTagAttr","safeAttrValue","escapeHtml","cssFilter","me","stripBlankChar","allowCommentTag","stripCommentTag","stripIgnoreTagBody","StripTagBody","retHtml","sourcePosition","position","info","isWhite","whiteAttrList","attrsHtml","isWhiteAttr","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","release","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","getTagName","tagName","rethtml","lastPos","tagStart","quoteStart","currentPos","len","currentTagName","charAt","substr","REGEXP_ILLEGAL_ATTR_NAME","onAttr","retAttrs","tmpName","addAttr","v","j","findNextEqual","findBeforeEqual","stripQuoteWrap","isQuoteWrapString","isObject","setPrototypeOf","set","that","C","S","filterXSS","isWorkerEnv","self","DedicatedWorkerGlobalScope","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_rich_text_vue_vue_type_style_index_0_id_dfd5471a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_rich_text_vue_vue_type_style_index_0_id_dfd5471a_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultWhiteList","align-content","align-items","align-self","alignment-adjust","alignment-baseline","all","anchor-point","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","azimuth","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","baseline-shift","binding","bleed","bookmark-label","bookmark-level","bookmark-state","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","box-snap","box-suppress","break-after","break-before","break-inside","caption-side","chains","clip","clip-path","clip-rule","color-interpolation-filters","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","counter-increment","counter-reset","counter-set","crop","cue","cue-after","cue-before","cursor","direction","display","display-inside","display-list","display-outside","dominant-baseline","elevation","empty-cells","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","float-offset","flood-color","flood-opacity","flow-from","flow-into","font","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-stretch","font-style","font-synthesis","font-variant","font-variant-alternates","font-variant-caps","font-variant-east-asian","font-variant-ligatures","font-variant-numeric","font-variant-position","font-weight","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","hyphens","icon","image-orientation","image-resolution","ime-mode","initial-letters","inline-box-align","justify-content","justify-items","justify-self","left","letter-spacing","lighting-color","line-box-contain","line-break","line-grid","line-height","line-snap","line-stacking","line-stacking-ruby","line-stacking-shift","line-stacking-strategy","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marker-offset","marker-side","marks","mask","mask-box","mask-box-outset","mask-box-repeat","mask-box-slice","mask-box-source","mask-box-width","mask-clip","mask-image","mask-origin","mask-position","mask-repeat","mask-size","mask-source-type","mask-type","max-height","max-lines","max-width","min-height","min-width","move-to","nav-down","nav-index","nav-left","nav-right","nav-up","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","page-policy","pause","pause-after","pause-before","perspective","perspective-origin","pitch","pitch-range","play-during","presentation-level","quotes","region-fragment","resize","rest","rest-after","rest-before","richness","right","rotation","rotation-point","ruby-align","ruby-merge","ruby-position","shape-image-threshold","shape-outside","shape-margin","speak","speak-as","speak-header","speak-numeral","speak-punctuation","speech-rate","stress","string-set","tab-size","table-layout","text-align","text-align-last","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-height","text-indent","text-justify","text-orientation","text-overflow","text-shadow","text-space-collapse","text-transform","text-underline-position","text-wrap","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","volume","white-space","widows","will-change","word-break","word-spacing","word-wrap","wrap-flow","wrap-through","writing-mode","z-index","onIgnoreAttr","REGEXP_URL_JAVASCRIPT","scope","String","trimRight","anObject","check","proto","buggy","Function","__proto__","$keys","hiddenKeys","concat","getOwnPropertyNames","$export","defined","fails","spaces","space","non","ltrim","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","F","string","TYPE","parseStyle","cssLength","isParenthesisOpen","retCSS","addNewAttr","source","opts","getDefaultCSSWhiteList","a","abbr","address","area","article","aside","audio","b","bdi","bdo","big","blockquote","br","caption","center","cite","col","colgroup","dd","del","details","dl","dt","em","footer","h1","h2","h3","h4","h5","h6","header","hr","ins","li","mark","nav","ol","p","pre","section","small","span","sub","sup","strong","tbody","tfoot","th","thead","tt","u","ul","defaultCSSFilter","REGEXP_LT","REGEXP_GT","friendlyAttrValue","REGEXP_DEFAULT_ON_TAG_ATTR_4","lastIndex","REGEXP_DEFAULT_ON_TAG_ATTR_7","REGEXP_DEFAULT_ON_TAG_ATTR_8","escapeAttrValue","REGEXP_QUOTE","REGEXP_QUOTE_2","REGEXP_ATTR_VALUE_1","REGEXP_ATTR_VALUE_COLON","REGEXP_ATTR_VALUE_NEWLINE","escapeQuote","unescapeQuote","escapeHtmlEntities","fromCharCode","escapeDangerHtml5Entities","clearNonPrintableCharacter","str2","charCodeAt","tags","next","isRemoveAllTag","isArray","isRemoveTag","removeList","posStart","end","pos","STRIP_COMMENT_TAG_REGEXP","chars","char","cof","inheritIfRequired","gOPN","dP","$trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","NaN","digits","l","valueOf","keys","render","_vm","_h","$createElement","_c","_self","ref","staticClass","class","phSwitch","_v","_e","staticStyle","lAction","_s","curTextLength","handlePost","handleReply","staticRenderFns","message_rich_textvue_type_script_lang_js_","rich_textvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","match","components","props","showPostButton","Boolean","default","showReplyButton","limit","backupHtml","editorContent","editorText","mounted","wangeditor__WEBPACK_IMPORTED_MODULE_0___default","$refs","headerBar","created","methods","getContent","getText","xssHtml","xss__WEBPACK_IMPORTED_MODULE_1___default","$util","logger","$emit","createTime","creator","$store","state","userData","commentatorId"],"mappings":"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","file":"js/ionaDynamic~messageDetail~myIMessage~userCard.3b61bfeb.js","sourcesContent":["var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar FilterCSS = require('./css');\n\n\n/**\n * XSS过滤\n *\n * @param {String} css 要过滤的CSS代码\n * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr\n * @return {String}\n */\nfunction filterCSS (html, options) {\n  var xss = new FilterCSS(options);\n  return xss.process(html);\n}\n\n\n// 输出\nexports = module.exports = filterCSS;\nexports.FilterCSS = FilterCSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n// 在浏览器端使用\nif (typeof window !== 'undefined') {\n  window.filterCSS = module.exports;\n}\n","/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\"\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function(html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function(sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: whiteList.hasOwnProperty(tag)\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function(name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        var html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        var ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"user strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if ((c === '\"' || c === \"'\") && html.charAt(currentPos - 1) === \"=\") {\n          quoteStart = c;\n          continue;\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"user strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastPos &&\n        (c === '\"' || c === \"'\") &&\n        html.charAt(i - 1) === \"=\"\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\nfor (var i in parser) exports[i] = parser[i];\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n\n// using `xss` on the WebWorker, output `filterXSS` to the globals\nfunction isWorkerEnv() {\n  return typeof self !== 'undefined' && typeof DedicatedWorkerGlobalScope !== 'undefined' && self instanceof DedicatedWorkerGlobalScope;\n}\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rich-text.vue?vue&type=style&index=0&id=dfd5471a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rich-text.vue?vue&type=style&index=0&id=dfd5471a&scoped=true&lang=css&\"","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList () {\n  // 白名单值说明：\n  // true: 允许该属性\n  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许\n  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许\n  // 除上面列出的值外均表示不允许\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * 匹配到白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * 匹配到不在白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * 过滤属性值\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onAttr = onAttr;\nexports.onIgnoreAttr = onIgnoreAttr;\nexports.safeAttrValue = safeAttrValue;\n","module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar _ = require('./util');\n\n\n/**\n * 解析style\n *\n * @param {String} css\n * @param {Function} onAttr 处理属性的函数\n *   参数格式： function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle (css, onAttr) {\n  css = _.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // 如果没有正常的闭合圆括号，则直接忽略当前属性\n    if (!isParenthesisOpen) {\n      var source = _.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _.trim(source.slice(0, j));\n        var value = _.trim(source.slice(j + 1));\n        // 必须有属性名称\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // 备注开始\n      var j = css.indexOf('*/', i + 2);\n      // 如果没有正常的备注结束，则后面的部分全部跳过\n      if (j === -1) break;\n      // 直接将当前位置调到备注结尾，并且初始化状态\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) {\n        // 在圆括号里面，忽略\n      } else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _.trim(retCSS);\n}\n\nmodule.exports = parseStyle;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // 如果过滤后 value 为空则直接忽略\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n","/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar getDefaultCSSWhiteList = require(\"cssfilter\").getDefaultWhiteList;\nvar _ = require(\"./util\");\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\"],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\"],\n    ins: [\"datetime\"],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    sup: [],\n    strong: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\", \"height\", \"width\"]\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 = /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 = /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape doube quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function() {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function(tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function(html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _.forEach(removeList, function(pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    }\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  return html.replace(STRIP_COMMENT_TAG_REGEXP, \"\");\n}\nvar STRIP_COMMENT_TAG_REGEXP = /<!--[\\s\\S]*?-->/g;\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function(char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onTag = onTag;\nexports.onIgnoreTag = onIgnoreTag;\nexports.onTagAttr = onTagAttr;\nexports.onIgnoreTagAttr = onIgnoreTagAttr;\nexports.safeAttrValue = safeAttrValue;\nexports.escapeHtml = escapeHtml;\nexports.escapeQuote = escapeQuote;\nexports.unescapeQuote = unescapeQuote;\nexports.escapeHtmlEntities = escapeHtmlEntities;\nexports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\nexports.clearNonPrintableCharacter = clearNonPrintableCharacter;\nexports.friendlyAttrValue = friendlyAttrValue;\nexports.escapeAttrValue = escapeAttrValue;\nexports.onIgnoreTagStripAll = onIgnoreTagStripAll;\nexports.StripTagBody = StripTagBody;\nexports.stripCommentTag = stripCommentTag;\nexports.stripBlankChar = stripBlankChar;\nexports.cssFilter = defaultCSSFilter;\nexports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.showPostButton)?_c('div',{ref:\"placeholder\",staticClass:\"placeholder\",class:_vm.phSwitch},[_vm._v(\"有什么新鲜事?\")]):_vm._e(),(_vm.showReplyButton)?_c('div',{ref:\"placeholder\",staticClass:\"placeholder\",class:_vm.phSwitch},[_vm._v(\"reply\")]):_vm._e(),_c('div',{ref:\"headerBar\",staticClass:\"toolbar\"}),_c('div',{ref:\"editor\",staticClass:\"text\",staticStyle:{\"text-align\":\"left\"}}),_c('div',{ref:\"limit\",staticClass:\"limit\",class:_vm.lAction},[_vm._v(_vm._s(_vm.curTextLength))]),_c('div',{staticStyle:{\"margin-top\":\"10px\"}},[(_vm.showPostButton)?_c('Button',{staticClass:\"postButton\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handlePost}},[_vm._v(\"发文\")]):_vm._e(),(_vm.showReplyButton)?_c('Button',{staticClass:\"postButton\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleReply}},[_vm._v(\"reply\")]):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rich-text.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./rich-text.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./rich-text.vue?vue&type=template&id=dfd5471a&scoped=true&\"\nimport script from \"./rich-text.vue?vue&type=script&lang=js&\"\nexport * from \"./rich-text.vue?vue&type=script&lang=js&\"\nimport style0 from \"./rich-text.vue?vue&type=style&index=0&id=dfd5471a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"dfd5471a\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  indexOf: function(arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function(arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function(str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function(str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  }\n};\n","<style scoped>\n.text {\n  border: 1px solid rgb(29, 161, 242);\n  height: 235px;\n  border-radius: calc(16px);\n  overflow: auto;\n}\n.toolbar {\n  margin-bottom: 10px;\n}\n.placeholder {\n  color: #9197a3;\n  position: absolute;\n  z-index: 1;\n  top: 72px;\n  left: 27px;\n  font-size: 20px;\n}\n\n.show {\n  display: block;\n}\n\n.close {\n  display: none;\n}\n\n.limit {\n  color: #9197a3;\n  z-index: 1;\n  float: right;\n  margin-right: 11px;\n  position: relative;\n  top: -40px;\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  font-size: 20px;\n  color: black;\n}\n\n.limit-red {\n  color: red;\n}\n\n.limit-normal {\n}\n.postButton {\n  width: 15%;\n  border-radius: 20px;\n}\n.w-e-text-container {\n  height: 100px;\n}\n</style>\n<template>\n  <div>\n    <div ref=\"placeholder\" v-if=\"showPostButton\" class=\"placeholder\" :class=\"phSwitch\">有什么新鲜事?</div>\n    <div ref=\"placeholder\" v-if=\"showReplyButton\" class=\"placeholder\" :class=\"phSwitch\">reply</div>\n    <div ref=\"headerBar\" class=\"toolbar\"></div>\n    <div ref=\"editor\" class=\"text\" style=\"text-align:left\"></div>\n    <div ref=\"limit\" class=\"limit\" :class=\"lAction\">{{curTextLength}}</div>\n\n    <div style=\"margin-top: 10px\">\n      <Button v-if=\"showPostButton\" class=\"postButton\" type=\"primary\" @click=\"handlePost\">发文</Button>\n      <Button v-if=\"showReplyButton\" class=\"postButton\" type=\"primary\" @click=\"handleReply\">reply</Button>\n    </div>\n\n    <!-- <button v-on:click=\"getContent\">查看内容</button> -->\n    <!-- <button v-on:click=\"getText\">查看文本</button> -->\n  </div>\n</template>\n<script>\nimport E from \"wangeditor\";\nimport xss from \"xss\";\nimport { type } from \"os\";\nexport default {\n  components: {},\n  props: {\n    showPostButton: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    },\n    showReplyButton: {\n      type: Boolean,\n      default: () => {\n        return false;\n      }\n    }\n  },\n  data() {\n    return {\n      limit: 140,\n      backupHtml: \"\",\n      curTextLength: 140,\n      phSwitch: \"show\",\n      lAction: \"\",\n      editorContent: \"\",\n      editorText: \"\"\n    };\n  },\n  mounted() {\n    var editor = new E(this.$refs.headerBar, this.$refs.editor);\n    editor.customConfig.onchange = html => {\n      this.editorContent = html;\n      this.editorText = editor.txt.text();\n      this.curTextLength = this.limit - editor.txt.text().length;\n      if (this.curTextLength < 0) {\n        this.editorContent = this.backupHtml;\n        this.lAction = \"limit-red\";\n      } else {\n        this.backupHtml = html;\n        this.lAction = \"limit-normal\";\n      }\n    };\n    editor.customConfig.onfocus = () => {\n      this.phSwitch = \"close\";\n    };\n    editor.customConfig.onblur = html => {\n      if (this.curTextLength == this.limit) {\n        this.phSwitch = \"show\";\n      }\n    };\n    editor.customConfig.menus = [\"emoticon\"];\n    editor.customConfig.pasteFilterStyle = true;\n    editor.customConfig.pasteIgnoreImg = true;\n    editor.customConfig.onchangeTimeout = 0;\n    // 实现禁止复制\n    editor.customConfig.pasteTextHandle = function(content) {\n      return \"\";\n    };\n    editor.create();\n  },\n  created: function() {},\n  methods: {\n    getContent: function() {\n      alert(this.editorContent);\n    },\n    getText() {\n      alert(this.editorText);\n    },\n    handlePost() {\n      //XSS攻击过滤\n      let xssHtml = xss(this.editorContent);\n      global.$util.logger(xssHtml);\n      this.$emit(\"on-success-valid\", {\n        html: xssHtml,\n        createTime: \"\",\n        creator: this.$store.state.userData.id\n      });\n    },\n    handleReply() {\n      //XSS攻击过滤\n      let xssHtml = xss(this.editorContent);\n      global.$util.logger(xssHtml);\n      this.$emit(\"on-reply-success-valid\", {\n        html: xssHtml,\n        commentatorId: this.$store.state.userData.id\n      });\n    }\n  }\n};\n</script>","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n"],"sourceRoot":""}